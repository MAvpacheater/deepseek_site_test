// üéØ Smart AI Commands - –†–æ–∑—É–º–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ–¥–æ–º

const smartCommands = {
    // –ê–Ω–∞–ª—ñ–∑ –ø—Ä–æ–µ–∫—Ç—É
    analyzeProject: {
        name: '–ê–Ω–∞–ª—ñ–∑ –ø—Ä–æ–µ–∫—Ç—É',
        icon: 'üîç',
        prompt: () => {
            const files = Object.keys(window.codeFiles || {});
            return `–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π —Ü–µ–π –ø—Ä–æ–µ–∫—Ç –¥–µ—Ç–∞–ª—å–Ω–æ:

1. –ê—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞ —Ç–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
2. –Ø–∫—ñ—Å—Ç—å –∫–æ–¥—É
3. –ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏
4. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó —â–æ–¥–æ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è

–§–∞–π–ª–∏ –≤ –ø—Ä–æ–µ–∫—Ç—ñ: ${files.join(', ')}

–î–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ –ø–æ—Ä–∞–¥–∏ —è–∫ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –ø—Ä–æ–µ–∫—Ç.`;
        }
    },

    // –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥
    refactorCode: {
        name: '–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É',
        icon: 'üîß',
        prompt: (filename) => {
            if (!filename) {
                const files = Object.keys(window.codeFiles || {});
                filename = files[0];
            }
            return `–ó—Ä–æ–±–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ–∞–π–ª—É ${filename}:

1. –ü–æ–∫—Ä–∞—â —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞ —á–∏—Ç–∞–±–µ–ª—å–Ω—ñ—Å—Ç—å
2. –í–∏–¥–∞–ª–∏ –¥—É–±–ª—é–≤–∞–Ω–Ω—è –∫–æ–¥—É
3. –ó–∞—Å—Ç–æ—Å—É–π best practices
4. –û–ø—Ç–∏–º—ñ–∑—É–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
5. –î–æ–¥–∞–π JSDoc –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ

–ü–æ–≤–µ—Ä–Ω–∏ –¢–Ü–õ–¨–ö–ò –∑–º—ñ–Ω–µ–Ω–∏–π –∫–æ–¥ –∑ –º–∞—Ä–∫–µ—Ä–æ–º:
// FILE: ${filename}`;
        }
    },

    // –î–æ–¥–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é
    addFeature: {
        name: '–î–æ–¥–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é',
        icon: '‚ú®',
        prompt: () => {
            const feature = prompt('üìù –û–ø–∏—à–∏ —è–∫—É —Ñ—É–Ω–∫—Ü—ñ—é –¥–æ–¥–∞—Ç–∏:');
            if (!feature) return null;
            
            return `–î–æ–¥–∞–π –Ω–æ–≤—É —Ñ—É–Ω–∫—Ü—ñ—é: ${feature}

1. –°—Ç–≤–æ—Ä–∏ –Ω–æ–≤–∏–π –∫–æ–¥ –∞–±–æ –æ–Ω–æ–≤–∏—Ç–∏ —ñ—Å–Ω—É—é—á—ñ —Ñ–∞–π–ª–∏
2. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —ñ—Å–Ω—É—é—á—É –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç—É
3. –î–æ–¥–∞–π error handling
4. –ù–∞–ø–∏—à–∏ —á–∏—Å—Ç–∏–π, –∑—Ä–æ–∑—É–º—ñ–ª–∏–π –∫–æ–¥
5. –î–æ–¥–∞–π –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ

–î–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ñ–∞–π–ª—É –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π:
// FILE: –Ω–∞–∑–≤–∞_—Ñ–∞–π–ª—É.js`;
        }
    },

    // –í–∏–ø—Ä–∞–≤–∏—Ç–∏ –±–∞–≥
    fixBug: {
        name: '–í–∏–ø—Ä–∞–≤–∏—Ç–∏ –±–∞–≥',
        icon: 'üêõ',
        prompt: () => {
            const bug = prompt('üêõ –û–ø–∏—à–∏ –ø—Ä–æ–±–ª–µ–º—É:');
            if (!bug) return null;
            
            return `–í–∏–ø—Ä–∞–≤ –±–∞–≥: ${bug}

1. –ó–Ω–∞–π–¥–∏ –ø—Ä–∏—á–∏–Ω—É –ø—Ä–æ–±–ª–µ–º–∏
2. –ó–∞–ø—Ä–æ–ø–æ–Ω—É–π —Ä—ñ—à–µ–Ω–Ω—è
3. –ü–æ–≤–µ—Ä–Ω–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫–æ–¥
4. –ü–æ—è—Å–Ω–∏ —â–æ –±—É–ª–æ –Ω–µ —Ç–∞–∫

–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –º–∞—Ä–∫–µ—Ä:
// FILE: –Ω–∞–∑–≤–∞_—Ñ–∞–π–ª—É.js`;
        }
    },

    // –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è
    optimizePerformance: {
        name: '–û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è',
        icon: '‚ö°',
        prompt: (filename) => {
            if (!filename) {
                return `–û–ø—Ç–∏–º—ñ–∑—É–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç—É:

1. –ó–Ω–∞–π–¥–∏ bottlenecks
2. –ü–æ–∫—Ä–∞—â –∞–ª–≥–æ—Ä–∏—Ç–º–∏
3. –û–ø—Ç–∏–º—ñ–∑—É–π –∑–∞–ø–∏—Ç–∏ —Ç–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
4. –ó–º–µ–Ω—à–∏ —Ä–æ–∑–º—ñ—Ä –±–∞–Ω–¥–ª—É

–ü–æ–≤–µ—Ä–Ω–∏ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω—ñ —Ñ–∞–π–ª–∏ –∑ –º–∞—Ä–∫–µ—Ä–∞–º–∏:
// FILE: –Ω–∞–∑–≤–∞_—Ñ–∞–π–ª—É.js`;
            }
            
            return `–û–ø—Ç–∏–º—ñ–∑—É–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —Ñ–∞–π–ª—É ${filename}:

1. –ü–æ–∫—Ä–∞—â –∞–ª–≥–æ—Ä–∏—Ç–º–∏
2. –í–∏–¥–∞–ª–∏ –∑–∞–π–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó
3. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π –º–µ–º–æ—ñ–∑–∞—Ü—ñ—é –¥–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ
4. –û–ø—Ç–∏–º—ñ–∑—É–π —Ü–∏–∫–ª—ñ

–ü–æ–≤–µ—Ä–Ω–∏ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–π –∫–æ–¥:
// FILE: ${filename}`;
        }
    },

    // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ç–µ—Å—Ç—ñ–≤
    generateTests: {
        name: '–ì–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ç–µ—Å—Ç–∏',
        icon: 'üß™',
        prompt: (filename) => {
            if (!filename) {
                const files = Object.keys(window.codeFiles || {})
                    .filter(f => f.endsWith('.js') || f.endsWith('.ts'));
                filename = files[0];
            }
            
            return `–°—Ç–≤–æ—Ä–∏ unit —Ç–µ—Å—Ç–∏ –¥–ª—è ${filename}:

1. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π Jest
2. –ü–æ–∫—Ä–∏–π –æ—Å–Ω–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
3. –î–æ–¥–∞–π edge cases
4. –ü–µ—Ä–µ–≤—ñ—Ä error handling

–°—Ç–≤–æ—Ä–∏ –Ω–æ–≤–∏–π —Ñ–∞–π–ª:
// FILE: ${filename.replace(/\.(js|ts)$/, '.test.$1')}`;
        }
    },

    // –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è
    addDocumentation: {
        name: '–î–æ–¥–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é',
        icon: 'üìö',
        prompt: (filename) => {
            if (!filename) {
                return `–°—Ç–≤–æ—Ä–∏ –ø–æ–≤–Ω—É –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é –ø—Ä–æ–µ–∫—Ç—É:

1. README.md –∑ –æ–ø–∏—Å–æ–º
2. JSDoc –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ —É –∫–æ–¥—ñ
3. –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
4. API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è

–°—Ç–≤–æ—Ä–∏ —Ñ–∞–π–ª–∏ –∑ –º–∞—Ä–∫–µ—Ä–∞–º–∏:
// FILE: –Ω–∞–∑–≤–∞_—Ñ–∞–π–ª—É.md`;
            }
            
            return `–î–æ–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω—É –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é –¥–æ ${filename}:

1. JSDoc –¥–ª—è –≤—Å—ñ—Ö —Ñ—É–Ω–∫—Ü—ñ–π
2. –û–ø–∏—Å –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ —Ç–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è
3. –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
4. –ü–æ—è—Å–Ω–µ–Ω–Ω—è —Å–∫–ª–∞–¥–Ω–∏—Ö —á–∞—Å—Ç–∏–Ω

–ü–æ–≤–µ—Ä–Ω–∏ —Ñ–∞–π–ª –∑ –¥–æ–¥–∞–Ω–æ—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—î—é:
// FILE: ${filename}`;
        }
    },

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–µ–∑–ø–µ–∫–∏
    securityAudit: {
        name: '–ê—É–¥–∏—Ç –±–µ–∑–ø–µ–∫–∏',
        icon: 'üõ°Ô∏è',
        prompt: () => {
            return `–ü–µ—Ä–µ–≤—ñ—Ä –±–µ–∑–ø–µ–∫—É –ø—Ä–æ–µ–∫—Ç—É:

1. XSS –≤—Ä–∞–∑–ª–∏–≤–æ—Å—Ç—ñ
2. SQL injection
3. –ù–µ–±–µ–∑–ø–µ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó (eval, innerHTML)
4. –í–∏—Ç—ñ–∫ –¥–∞–Ω–∏—Ö
5. –ù–µ–∑–∞—Ö–∏—â–µ–Ω—ñ API –∑–∞–ø–∏—Ç–∏

–ó–Ω–∞–π–¥–∏ –≤—Å—ñ –ø—Ä–æ–±–ª–µ–º–∏ —Ç–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è.`;
        }
    },

    // –ú–æ–¥–µ—Ä–Ω—ñ–∑–∞—Ü—ñ—è –∫–æ–¥—É
    modernizeCode: {
        name: '–ú–æ–¥–µ—Ä–Ω—ñ–∑—É–≤–∞—Ç–∏',
        icon: 'üöÄ',
        prompt: (filename) => {
            return `–ú–æ–¥–µ—Ä–Ω—ñ–∑—É–π –∫–æ–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Å—É—á–∞—Å–Ω—ñ –ø—Ä–∞–∫—Ç–∏–∫–∏:

1. ES6+ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å (—Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è)
2. Async/await –∑–∞–º—ñ—Å—Ç—å callbacks
3. –°—É—á–∞—Å–Ω—ñ API
4. TypeScript —Ç–∏–ø–∏ (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
5. Functional programming patterns

${filename ? `–§–∞–π–ª: ${filename}` : '–í—Å—ñ JavaScript —Ñ–∞–π–ª–∏'}

–ü–æ–≤–µ—Ä–Ω–∏ –æ–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥ –∑ –º–∞—Ä–∫–µ—Ä–∞–º–∏:
// FILE: –Ω–∞–∑–≤–∞_—Ñ–∞–π–ª—É.js`;
        }
    },

    // –î–æ–¥–∞—Ç–∏ —Ç–∏–ø–∏ TypeScript
    addTypeScript: {
        name: '–î–æ–¥–∞—Ç–∏ TypeScript',
        icon: 'üìò',
        prompt: (filename) => {
            if (!filename) {
                return `–ö–æ–Ω–≤–µ—Ä—Ç—É–π JavaScript —Ñ–∞–π–ª–∏ –≤ TypeScript:

1. –î–æ–¥–∞–π —Ç–∏–ø–∏ –¥–ª—è –≤—Å—ñ—Ö –∑–º—ñ–Ω–Ω–∏—Ö
2. –°—Ç–≤–æ—Ä–∏ interfaces
3. –î–æ–¥–∞–π generics –¥–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ
4. –°—Ç—Ä–æ–≥–∞ —Ç–∏–ø—ñ–∑–∞—Ü—ñ—è

–°—Ç–≤–æ—Ä–∏ .ts —Ñ–∞–π–ª–∏ –∑ –º–∞—Ä–∫–µ—Ä–∞–º–∏:
// FILE: –Ω–∞–∑–≤–∞_—Ñ–∞–π–ª—É.ts`;
            }
            
            const tsFilename = filename.replace('.js', '.ts');
            return `–ö–æ–Ω–≤–µ—Ä—Ç—É–π ${filename} –≤ TypeScript:

1. –î–æ–¥–∞–π —Ç–∏–ø–∏
2. –°—Ç–≤–æ—Ä–∏ interfaces
3. –¢–∏–ø—ñ–∑—É–π —Ñ—É–Ω–∫—Ü—ñ—ó

–°—Ç–≤–æ—Ä–∏ —Ñ–∞–π–ª:
// FILE: ${tsFilename}`;
        }
    },

    // –ü–æ–∫—Ä–∞—â–∏—Ç–∏ UI/UX
    improveUI: {
        name: '–ü–æ–∫—Ä–∞—â–∏—Ç–∏ UI',
        icon: 'üé®',
        prompt: () => {
            return `–ü–æ–∫—Ä–∞—â UI/UX –ø—Ä–æ–µ–∫—Ç—É:

1. –°—É—á–∞—Å–Ω–∏–π –¥–∏–∑–∞–π–Ω
2. –ê–¥–∞–ø—Ç–∏–≤–Ω—ñ—Å—Ç—å
3. –ê–Ω—ñ–º–∞—Ü—ñ—ó —Ç–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏
4. Accessibility (a11y)
5. Dark mode

–û–Ω–æ–≤—å HTML —Ç–∞ CSS —Ñ–∞–π–ª–∏ –∑ –º–∞—Ä–∫–µ—Ä–∞–º–∏:
// FILE: –Ω–∞–∑–≤–∞_—Ñ–∞–π–ª—É.html
// FILE: –Ω–∞–∑–≤–∞_—Ñ–∞–π–ª—É.css`;
        }
    },

    // –î–æ–¥–∞—Ç–∏ API —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—é
    addAPI: {
        name: '–î–æ–¥–∞—Ç–∏ API',
        icon: 'üîå',
        prompt: () => {
            const apiType = prompt('üîå –Ø–∫–∏–π API —ñ–Ω—Ç–µ–≥—Ä—É–≤–∞—Ç–∏? (REST, GraphQL, WebSocket)');
            if (!apiType) return null;
            
            return `–î–æ–¥–∞–π ${apiType} —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—é:

1. –°—Ç–≤–æ—Ä–∏ API client
2. –î–æ–¥–∞–π error handling
3. –†–µ–∞–ª—ñ–∑—É–π retry logic
4. –î–æ–¥–∞–π –∫–µ—à—É–≤–∞–Ω–Ω—è
5. TypeScript —Ç–∏–ø–∏ –¥–ª—è API

–°—Ç–≤–æ—Ä–∏ —Ñ–∞–π–ª–∏ –∑ –º–∞—Ä–∫–µ—Ä–∞–º–∏:
// FILE: api/client.js
// FILE: api/types.ts`;
        }
    }
};

// ========================================
// UI –î–õ–Ø –ö–û–ú–ê–ù–î
// ========================================

function showSmartCommands() {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π –ø—Ä–æ–µ–∫—Ç
    const hasProject = window.codeFiles && Object.keys(window.codeFiles).length > 0;
    
    if (!hasProject) {
        alert('‚ö†Ô∏è –°–ø–æ—á–∞—Ç–∫—É –∑–∞–≤–∞–Ω—Ç–∞–∂ –ø—Ä–æ–µ–∫—Ç –∑ GitHub –∞–±–æ —Å—Ç–≤–æ—Ä–∏ —Ñ–∞–π–ª–∏!');
        return;
    }
    
    // –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
    let modal = document.getElementById('smart-commands-modal');
    
    if (!modal) {
        modal = document.createElement('div');
        modal.id = 'smart-commands-modal';
        modal.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(10px);
            z-index: 2000;
            display: none;
            align-items: center;
            justify-content: center;
            padding: 20px;
        `;
        
        modal.innerHTML = `
            <div style="
                background: var(--bg-card);
                border-radius: 16px;
                max-width: 800px;
                width: 100%;
                max-height: 80vh;
                overflow-y: auto;
                border: 2px solid var(--accent-primary);
                box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
            ">
                <div style="
                    padding: 20px 25px;
                    background: linear-gradient(135deg, var(--accent-primary) 0%, var(--accent-secondary) 100%);
                    color: white;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    border-radius: 14px 14px 0 0;
                ">
                    <h3 style="margin: 0; font-size: 18px;">üéØ –†–æ–∑—É–º–Ω—ñ –∫–æ–º–∞–Ω–¥–∏</h3>
                    <button onclick="closeSmartCommands()" style="
                        background: rgba(255, 255, 255, 0.2);
                        border: none;
                        color: white;
                        width: 32px;
                        height: 32px;
                        border-radius: 6px;
                        cursor: pointer;
                        font-size: 18px;
                    ">‚úï</button>
                </div>
                
                <div id="commands-grid" style="
                    padding: 20px;
                    display: grid;
                    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
                    gap: 15px;
                "></div>
            </div>
        `;
        
        document.body.appendChild(modal);
    }
    
    // –ó–∞–ø–æ–≤–Ω–∏—Ç–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
    const grid = document.getElementById('commands-grid');
    grid.innerHTML = '';
    
    Object.entries(smartCommands).forEach(([key, command]) => {
        const btn = document.createElement('button');
        btn.style.cssText = `
            background: var(--bg-secondary);
            border: 2px solid var(--border-color);
            border-radius: 12px;
            padding: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: left;
            color: var(--text-primary);
        `;
        
        btn.innerHTML = `
            <div style="font-size: 32px; margin-bottom: 10px;">${command.icon}</div>
            <div style="font-size: 14px; font-weight: 600;">${command.name}</div>
        `;
        
        btn.onmouseover = function() {
            this.style.borderColor = 'var(--accent-primary)';
            this.style.transform = 'translateY(-2px)';
        };
        
        btn.onmouseout = function() {
            this.style.borderColor = 'var(--border-color)';
            this.style.transform = 'translateY(0)';
        };
        
        btn.onclick = () => executeSmartCommand(key);
        
        grid.appendChild(btn);
    });
    
    modal.style.display = 'flex';
}

function closeSmartCommands() {
    const modal = document.getElementById('smart-commands-modal');
    if (modal) {
        modal.style.display = 'none';
    }
}

function executeSmartCommand(commandKey) {
    const command = smartCommands[commandKey];
    if (!command) return;
    
    closeSmartCommands();
    
    // –û—Ç—Ä–∏–º–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω–∏–π —Ñ–∞–π–ª —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
    const activeFile = window.activeFile;
    
    // –ì–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ prompt
    const prompt = command.prompt(activeFile);
    
    if (!prompt) return; // –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å–∫–∞—Å—É–≤–∞–≤
    
    // –í—Å—Ç–∞–≤–∏—Ç–∏ prompt –≤ input
    const input = document.getElementById('deepseekInput');
    if (input) {
        input.value = prompt;
        input.style.height = 'auto';
        input.style.height = Math.min(input.scrollHeight, 150) + 'px';
        input.focus();
        
        // –ü–æ–∫–∞–∑–∞—Ç–∏ –ø—ñ–¥–∫–∞–∑–∫—É
        showCommandHint(command.name);
    }
}

function showCommandHint(commandName) {
    const hint = document.createElement('div');
    hint.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: linear-gradient(135deg, var(--accent-primary) 0%, var(--accent-secondary) 100%);
        color: white;
        padding: 15px 20px;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
        z-index: 9999;
        animation: slideInRight 0.3s ease;
    `;
    
    hint.innerHTML = `
        <div style="display: flex; align-items: center; gap: 10px;">
            <span style="font-size: 24px;">‚ú®</span>
            <div>
                <div style="font-weight: 600; margin-bottom: 4px;">–ö–æ–º–∞–Ω–¥–∞ –≥–æ—Ç–æ–≤–∞!</div>
                <div style="font-size: 13px; opacity: 0.9;">${commandName}</div>
            </div>
        </div>
    `;
    
    document.body.appendChild(hint);
    
    setTimeout(() => {
        hint.style.animation = 'slideOutRight 0.3s ease';
        setTimeout(() => hint.remove(), 300);
    }, 3000);
}

// ========================================
// –®–í–ò–î–ö–Ü –î–Ü–á
// ========================================

function quickAnalyze() {
    executeSmartCommand('analyzeProject');
}

function quickRefactor() {
    executeSmartCommand('refactorCode');
}

function quickAddFeature() {
    executeSmartCommand('addFeature');
}

function quickFixBug() {
    executeSmartCommand('fixBug');
}

// ========================================
// INITIALIZATION
// ========================================

function initializeSmartCommands() {
    // –î–æ–¥–∞—Ç–∏ –∫–Ω–æ–ø–∫—É –≤ header
    const codeHeader = document.querySelector('#deepseekMode .code-header');
    if (codeHeader && !document.getElementById('smart-commands-btn')) {
        const actions = codeHeader.querySelector('.code-actions');
        if (actions) {
            const btn = document.createElement('button');
            btn.id = 'smart-commands-btn';
            btn.textContent = 'üéØ –ö–æ–º–∞–Ω–¥–∏';
            btn.title = '–†–æ–∑—É–º–Ω—ñ –∫–æ–º–∞–Ω–¥–∏ AI';
            btn.onclick = showSmartCommands;
            btn.style.cssText = `
                background: rgba(102, 126, 234, 0.2);
                color: white;
                border: 1px solid var(--accent-primary);
                padding: 8px 14px;
                border-radius: 6px;
                cursor: pointer;
                font-size: 13px;
                font-weight: 500;
            `;
            actions.appendChild(btn);
        }
    }
    
    // –î–æ–¥–∞—Ç–∏ CSS –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ–π
    if (!document.getElementById('smart-commands-styles')) {
        const style = document.createElement('style');
        style.id = 'smart-commands-styles';
        style.textContent = `
            @keyframes slideInRight {
                from {
                    transform: translateX(100%);
                    opacity: 0;
                }
                to {
                    transform: translateX(0);
                    opacity: 1;
                }
            }
            
            @keyframes slideOutRight {
                from {
                    transform: translateX(0);
                    opacity: 1;
                }
                to {
                    transform: translateX(100%);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeSmartCommands);
} else {
    initializeSmartCommands();
}

// Export
window.showSmartCommands = showSmartCommands;
window.closeSmartCommands = closeSmartCommands;
window.smartCommands = smartCommands;
