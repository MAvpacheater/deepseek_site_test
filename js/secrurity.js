// Security Features

// üîê –®–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è API –∫–ª—é—á—ñ–≤
function encryptApiKey(key) {
    // –ü—Ä–æ—Å—Ç–∏–π XOR —à–∏—Ñ—Ä (–¥–ª—è –±–∞–∑–æ–≤–æ—ó –æ–±—Ñ—É—Å–∫–∞—Ü—ñ—ó)
    const secret = 'AI_HUB_SECRET_KEY_2024';
    let encrypted = '';
    
    for (let i = 0; i < key.length; i++) {
        const keyChar = key.charCodeAt(i);
        const secretChar = secret.charCodeAt(i % secret.length);
        encrypted += String.fromCharCode(keyChar ^ secretChar);
    }
    
    return btoa(encrypted); // Base64 –∫–æ–¥—É–≤–∞–Ω–Ω—è
}

function decryptApiKey(encrypted) {
    try {
        const secret = 'AI_HUB_SECRET_KEY_2024';
        const decoded = atob(encrypted);
        let decrypted = '';
        
        for (let i = 0; i < decoded.length; i++) {
            const encChar = decoded.charCodeAt(i);
            const secretChar = secret.charCodeAt(i % secret.length);
            decrypted += String.fromCharCode(encChar ^ secretChar);
        }
        
        return decrypted;
    } catch (e) {
        return encrypted; // –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—å —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞—Ç–∏, –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —è–∫ —î
    }
}

// –û–Ω–æ–≤–ª–µ–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è–º
function saveSettingsSecure() {
    const geminiKey = document.getElementById('geminiApiKey').value.trim();
    const groqKey = document.getElementById('groqApiKey').value.trim();
    const geminiPrompt = document.getElementById('geminiSystemPrompt').value.trim();
    const deepseekPrompt = document.getElementById('deepseekSystemPrompt').value.trim();

    // –®–∏—Ñ—Ä—É–≤–∞—Ç–∏ –∫–ª—é—á—ñ –ø–µ—Ä–µ–¥ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º
    if (geminiKey) {
        localStorage.setItem('gemini_api_key', encryptApiKey(geminiKey));
        localStorage.setItem('gemini_encrypted', 'true');
    }
    
    if (groqKey) {
        localStorage.setItem('groq_api_key', encryptApiKey(groqKey));
        localStorage.setItem('groq_encrypted', 'true');
    }
    
    localStorage.setItem('gemini_system_prompt', geminiPrompt);
    localStorage.setItem('deepseek_system_prompt', deepseekPrompt);

    alert('‚úÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ –±–µ–∑–ø–µ—á–Ω–æ (–∑ —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è–º)!');
}

// –û–Ω–æ–≤–ª–µ–Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ —Ä–æ–∑—à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è–º
function loadSettingsSecure() {
    const geminiKeyEncrypted = localStorage.getItem('gemini_api_key') || '';
    const groqKeyEncrypted = localStorage.getItem('groq_api_key') || '';
    const isGeminiEncrypted = localStorage.getItem('gemini_encrypted') === 'true';
    const isGroqEncrypted = localStorage.getItem('groq_encrypted') === 'true';
    
    const geminiPrompt = localStorage.getItem('gemini_system_prompt') || '–¢–∏ –∫–æ—Ä–∏—Å–Ω–∏–π AI –∞—Å—ñ—Å—Ç–µ–Ω—Ç. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —á—ñ—Ç–∫–æ, —Å—Ç–∏—Å–ª–æ —Ç–∞ –ø–æ —Å—É—Ç—ñ. –ì–æ–≤–æ—Ä–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é.';
    const deepseekPrompt = localStorage.getItem('deepseek_system_prompt') || '–¢–∏ –µ–∫—Å–ø–µ—Ä—Ç-–ø—Ä–æ–≥—Ä–∞–º—ñ—Å—Ç. –ü–∏—à–∏ —á–∏—Å—Ç–∏–π, –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–π –∫–æ–¥ –∑ –∫–æ–º–µ–Ω—Ç–∞—Ä—è–º–∏. –°—Ç–≤–æ—Ä—é–π –æ–∫—Ä–µ–º—ñ —Ñ–∞–π–ª–∏ –¥–ª—è HTML, CSS, JS. –ì–æ–≤–æ—Ä–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é.';

    const geminiApiKeyInput = document.getElementById('geminiApiKey');
    const groqApiKeyInput = document.getElementById('groqApiKey');
    const geminiSystemPromptInput = document.getElementById('geminiSystemPrompt');
    const deepseekSystemPromptInput = document.getElementById('deepseekSystemPrompt');

    // –†–æ–∑—à–∏—Ñ—Ä—É–≤–∞—Ç–∏ –∫–ª—é—á—ñ
    if (geminiApiKeyInput) {
        const geminiKey = isGeminiEncrypted ? decryptApiKey(geminiKeyEncrypted) : geminiKeyEncrypted;
        geminiApiKeyInput.value = geminiKey;
    }
    
    if (groqApiKeyInput) {
        const groqKey = isGroqEncrypted ? decryptApiKey(groqKeyEncrypted) : groqKeyEncrypted;
        groqApiKeyInput.value = groqKey;
    }
    
    if (geminiSystemPromptInput) geminiSystemPromptInput.value = geminiPrompt;
    if (deepseekSystemPromptInput) deepseekSystemPromptInput.value = deepseekPrompt;
}

// –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π –∫–ª—é—á –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
function getDecryptedApiKey(keyName) {
    const encrypted = localStorage.getItem(keyName);
    const isEncrypted = localStorage.getItem(`${keyName.replace('_api_key', '')}_encrypted`) === 'true';
    
    if (!encrypted) return '';
    return isEncrypted ? decryptApiKey(encrypted) : encrypted;
}

// üõ°Ô∏è –í–∞–ª—ñ–¥–∞—Ü—ñ—è –≤–≤–µ–¥–µ–Ω–Ω—è API –∫–ª—é—á—ñ–≤
function validateApiKey(key, type) {
    if (!key || key.trim() === '') {
        return { valid: false, message: 'API –∫–ª—é—á –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º' };
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É –¥–ª—è Gemini
    if (type === 'gemini') {
        if (!key.startsWith('AIza')) {
            return { valid: false, message: 'Gemini –∫–ª—é—á –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ "AIza"' };
        }
        if (key.length < 30) {
            return { valid: false, message: 'Gemini –∫–ª—é—á –∑–∞–Ω–∞–¥—Ç–æ –∫–æ—Ä–æ—Ç–∫–∏–π' };
        }
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É –¥–ª—è Groq
    if (type === 'groq') {
        if (!key.startsWith('gsk_')) {
            return { valid: false, message: 'Groq –∫–ª—é—á –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ "gsk_"' };
        }
        if (key.length < 40) {
            return { valid: false, message: 'Groq –∫–ª—é—á –∑–∞–Ω–∞–¥—Ç–æ –∫–æ—Ä–æ—Ç–∫–∏–π' };
        }
    }
    
    return { valid: true, message: '–ö–ª—é—á –≤–∞–ª—ñ–¥–Ω–∏–π' };
}

// –ü–æ–∫—Ä–∞—â–µ–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑ –≤–∞–ª—ñ–¥–∞—Ü—ñ—î—é
function saveSettingsWithValidation() {
    const geminiKey = document.getElementById('geminiApiKey').value.trim();
    const groqKey = document.getElementById('groqApiKey').value.trim();
    
    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è Gemini –∫–ª—é—á–∞
    if (geminiKey) {
        const validation = validateApiKey(geminiKey, 'gemini');
        if (!validation.valid) {
            alert('‚ö†Ô∏è Gemini API Key: ' + validation.message);
            return;
        }
    }
    
    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è Groq –∫–ª—é—á–∞
    if (groqKey) {
        const validation = validateApiKey(groqKey, 'groq');
        if (!validation.valid) {
            alert('‚ö†Ô∏è Groq API Key: ' + validation.message);
            return;
        }
    }
    
    // –Ø–∫—â–æ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—Ä–æ–π—à–ª–∞ - –∑–±–µ—Ä–µ–≥—Ç–∏
    saveSettingsSecure();
}

// ‚ö†Ô∏è –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ –Ω–µ–±–µ–∑–ø–µ—á–Ω–∏–π –∫–æ–¥
function checkForDangerousCode(code) {
    const dangerousPatterns = [
        { pattern: /eval\s*\(/gi, warning: 'eval() - –º–æ–∂–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –¥–æ–≤—ñ–ª—å–Ω–∏–π –∫–æ–¥' },
        { pattern: /innerHTML\s*=/gi, warning: 'innerHTML - —Ä–∏–∑–∏–∫ XSS –∞—Ç–∞–∫' },
        { pattern: /document\.write/gi, warning: 'document.write() - –∑–∞—Å—Ç–∞—Ä—ñ–ª–∞ –Ω–µ–±–µ–∑–ø–µ—á–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è' },
        { pattern: /exec\s*\(/gi, warning: 'exec() - –º–æ–∂–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ —Å–∏—Å—Ç–µ–º–Ω—ñ –∫–æ–º–∞–Ω–¥–∏' },
        { pattern: /<script[^>]*>[\s\S]*?<\/script>/gi, warning: '–í–±—É–¥–æ–≤–∞–Ω–∏–π script —Ç–µ–≥ - –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∞ –∑–∞–≥—Ä–æ–∑–∞' },
        { pattern: /localStorage\.setItem.*password/gi, warning: '–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é –≤ localStorage - –Ω–µ–±–µ–∑–ø–µ—á–Ω–æ!' },
        { pattern: /fetch\s*\([^)]*http:\/\//gi, warning: 'HTTP –∑–∞–ø–∏—Ç–∏ (–Ω–µ HTTPS) - –Ω–µ–∑–∞—Ö–∏—â–µ–Ω–µ –∑\'—î–¥–Ω–∞–Ω–Ω—è' }
    ];
    
    const warnings = [];
    
    dangerousPatterns.forEach(({ pattern, warning }) => {
        if (pattern.test(code)) {
            warnings.push(warning);
        }
    });
    
    return warnings;
}

// –ê–Ω–∞–ª—ñ–∑ –±–µ–∑–ø–µ–∫–∏ –∫–æ–¥—É
function analyzeCodeSecurity() {
    if (Object.keys(codeFiles).length === 0) {
        alert('‚ö†Ô∏è –ù–µ–º–∞—î –∫–æ–¥—É –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É!');
        return;
    }
    
    let allWarnings = [];
    
    Object.keys(codeFiles).forEach(filename => {
        const code = codeFiles[filename].code;
        const warnings = checkForDangerousCode(code);
        
        if (warnings.length > 0) {
            allWarnings.push({
                file: filename,
                warnings: warnings
            });
        }
    });
    
    if (allWarnings.length === 0) {
        alert('‚úÖ –ù–µ–±–µ–∑–ø–µ—á–Ω–∏—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!\n\n–ö–æ–¥ –≤–∏–≥–ª—è–¥–∞—î –±–µ–∑–ø–µ—á–Ω–æ.');
    } else {
        let report = 'üõ°Ô∏è –ó–í–Ü–¢ –ü–†–û –ë–ï–ó–ü–ï–ö–£\n\n';
        report += '‚ö†Ô∏è –ó–Ω–∞–π–¥–µ–Ω–æ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–æ –Ω–µ–±–µ–∑–ø–µ—á–Ω—ñ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó:\n\n';
        
        allWarnings.forEach(item => {
            report += `üìÑ ${item.file}:\n`;
            item.warnings.forEach(warning => {
                report += `   ‚Ä¢ ${warning}\n`;
            });
            report += '\n';
        });
        
        report += 'üí° –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ü—ñ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ –∫–æ–¥—É.';
        alert(report);
    }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–µ–∑–ø–µ–∫–∏ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
function initializeSecurity() {
    // –ó–∞–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞ –±–µ–∑–ø–µ—á–Ω—ñ
    window.saveSettings = saveSettingsWithValidation;
    window.loadSettings = loadSettingsSecure;
    
    // –î–æ–¥–∞—Ç–∏ –∫–Ω–æ–ø–∫—É –∞–Ω–∞–ª—ñ–∑—É –±–µ–∑–ø–µ–∫–∏
    const codeActions = document.querySelector('.code-actions');
    if (codeActions) {
        const securityBtn = document.createElement('button');
        securityBtn.textContent = 'üõ°Ô∏è –ë–µ–∑–ø–µ–∫–∞';
        securityBtn.title = '–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∫–æ–¥ –Ω–∞ –±–µ–∑–ø–µ–∫—É';
        securityBtn.onclick = analyzeCodeSecurity;
        securityBtn.style.cssText = `
            background: rgba(220, 53, 69, 0.2);
            color: white;
            border: 1px solid #dc3545;
            padding: 8px 14px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 13px;
            font-weight: 500;
            transition: all 0.2s ease;
        `;
        securityBtn.onmouseover = function() {
            this.style.background = 'rgba(220, 53, 69, 0.3)';
        };
        securityBtn.onmouseout = function() {
            this.style.background = 'rgba(220, 53, 69, 0.2)';
        };
        
        codeActions.appendChild(securityBtn);
    }
    
    // –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è –≤ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö
    const geminiInput = document.getElementById('geminiApiKey');
    const groqInput = document.getElementById('groqApiKey');
    
    if (geminiInput && localStorage.getItem('gemini_encrypted') === 'true') {
        addEncryptionIndicator(geminiInput);
    }
    
    if (groqInput && localStorage.getItem('groq_encrypted') === 'true') {
        addEncryptionIndicator(groqInput);
    }
}

// –î–æ–¥–∞—Ç–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è
function addEncryptionIndicator(inputElement) {
    const indicator = document.createElement('span');
    indicator.textContent = 'üîê –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ';
    indicator.style.cssText = `
        display: inline-block;
        margin-left: 10px;
        color: #22c55e;
        font-size: 12px;
        font-weight: 600;
    `;
    
    const parent = inputElement.parentElement;
    const small = parent.querySelector('small');
    
    if (small && !small.querySelector('span')) {
        small.appendChild(indicator);
    }
}

// –û–Ω–æ–≤–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ä–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—Ö –∫–ª—é—á—ñ–≤
function getGeminiApiKey() {
    return getDecryptedApiKey('gemini_api_key');
}

function getGroqApiKey() {
    return getDecryptedApiKey('groq_api_key');
}
