// GitHub Repository Import & Enhancement Module

let githubToken = null;
let currentRepo = null;

// üêô –Ü–º–ø–æ—Ä—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—è –∑ GitHub
async function importFromGitHub() {
    const repoUrl = prompt(
        'üêô –í–≤–µ–¥—ñ—Ç—å URL GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—è:\n\n' +
        '–§–æ—Ä–º–∞—Ç: https://github.com/username/repo\n' +
        '–∞–±–æ: username/repo',
        ''
    );
    
    if (!repoUrl) return;
    
    // –ü–∞—Ä—Å–∏–Ω–≥ URL
    let owner, repo;
    const match = repoUrl.match(/github\.com\/([^\/]+)\/([^\/]+)/);
    if (match) {
        owner = match[1];
        repo = match[2].replace('.git', '');
    } else {
        const parts = repoUrl.split('/');
        if (parts.length === 2) {
            owner = parts[0];
            repo = parts[1];
        } else {
            alert('‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç URL!');
            return;
        }
    }
    
    showLoadingOverlay('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—è...');
    
    try {
        // –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—è
        const treeUrl = `https://api.github.com/repos/${owner}/${repo}/git/trees/main?recursive=1`;
        const headers = githubToken ? { 'Authorization': `token ${githubToken}` } : {};
        
        let response = await fetch(treeUrl, { headers });
        
        // –Ø–∫—â–æ main –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞, —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ master
        if (!response.ok) {
            const masterUrl = `https://api.github.com/repos/${owner}/${repo}/git/trees/master?recursive=1`;
            response = await fetch(masterUrl, { headers });
        }
        
        if (!response.ok) {
            throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π. –ú–æ–∂–ª–∏–≤–æ –≤—ñ–Ω –ø—Ä–∏–≤–∞—Ç–Ω–∏–π?');
        }
        
        const data = await response.json();
        const files = data.tree.filter(item => item.type === 'blob');
        
        // –§—ñ–ª—å—Ç—Ä—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ —Ñ–∞–π–ª–∏
        const allowedExtensions = ['.js', '.jsx', '.ts', '.tsx', '.html', '.css', '.scss', '.py', '.java', '.cpp', '.c', '.go', '.rs', '.php', '.rb'];
        const codeFiles = files.filter(file => 
            allowedExtensions.some(ext => file.path.endsWith(ext)) &&
            !file.path.includes('node_modules') &&
            !file.path.includes('.git') &&
            !file.path.includes('dist') &&
            !file.path.includes('build')
        );
        
        if (codeFiles.length === 0) {
            throw new Error('–£ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª—ñ–≤ –∑ –∫–æ–¥–æ–º!');
        }
        
        // –û–±–º–µ–∂–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ–∞–π–ª—ñ–≤
        const filesToLoad = codeFiles.slice(0, 20);
        
        if (codeFiles.length > 20) {
            if (!confirm(`‚ö†Ô∏è –ó–Ω–∞–π–¥–µ–Ω–æ ${codeFiles.length} —Ñ–∞–π–ª—ñ–≤.\n\n–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø–µ—Ä—à—ñ 20?`)) {
                hideLoadingOverlay();
                return;
            }
        }
        
        // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤–º—ñ—Å—Ç —Ñ–∞–π–ª—ñ–≤
        updateLoadingOverlay(`–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ${filesToLoad.length} —Ñ–∞–π–ª—ñ–≤...`);
        
        for (let i = 0; i < filesToLoad.length; i++) {
            const file = filesToLoad[i];
            updateLoadingOverlay(`–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ${i + 1}/${filesToLoad.length}: ${file.path}`);
            
            const contentUrl = `https://raw.githubusercontent.com/${owner}/${repo}/main/${file.path}`;
            let contentResponse = await fetch(contentUrl);
            
            if (!contentResponse.ok) {
                const masterUrl = `https://raw.githubusercontent.com/${owner}/${repo}/master/${file.path}`;
                contentResponse = await fetch(masterUrl);
            }
            
            if (contentResponse.ok) {
                const content = await contentResponse.text();
                const ext = file.path.split('.').pop();
                const language = getLanguageFromExtension(ext);
                
                window.codeFiles[file.path] = {
                    language: language,
                    code: content
                };
            }
        }
        
        currentRepo = { owner, repo, files: filesToLoad.length };
        
        hideLoadingOverlay();
        
        // –ü–µ—Ä–µ–º–∫–Ω—É—Ç–∏—Å—å –Ω–∞ DeepSeek —Ä–µ–∂–∏–º
        switchMode('deepseek');
        displayCodeFiles();
        
        // –î–æ–¥–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—à–Ω–∏–π —ñ–º–ø–æ—Ä—Ç
        addGitHubImportMessage(owner, repo, filesToLoad.length);
        
        alert(`‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!\n\nüìÅ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${filesToLoad.length} —Ñ–∞–π–ª—ñ–≤\n\n–¢–µ–ø–µ—Ä –º–æ–∂–µ—à –∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏, —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Ç–∞ –ø–æ–∫—Ä–∞—â—É–≤–∞—Ç–∏ –∫–æ–¥!`);
        
    } catch (error) {
        hideLoadingOverlay();
        console.error('–ü–æ–º–∏–ª–∫–∞:', error);
        alert('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É: ' + error.message);
    }
}

// –î–æ–¥–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —ñ–º–ø–æ—Ä—Ç
function addGitHubImportMessage(owner, repo, filesCount) {
    const messagesDiv = document.getElementById('deepseekMessages');
    if (!messagesDiv) return;
    
    const messageDiv = document.createElement('div');
    messageDiv.className = 'message assistant';
    messageDiv.style.background = 'linear-gradient(135deg, #2ea043 0%, #238636 100%)';
    messageDiv.style.padding = '20px';
    messageDiv.style.borderRadius = '12px';
    messageDiv.style.color = 'white';
    
    messageDiv.innerHTML = `
        <div style="display: flex; align-items: center; gap: 15px;">
            <div style="font-size: 48px;">üêô</div>
            <div style="flex: 1;">
                <div style="font-size: 18px; font-weight: 600; margin-bottom: 8px;">
                    –†–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –∑ GitHub
                </div>
                <div style="opacity: 0.9; font-size: 14px; margin-bottom: 8px;">
                    üì¶ ${owner}/${repo}
                </div>
                <div style="opacity: 0.9; font-size: 14px;">
                    üìÅ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${filesCount} —Ñ–∞–π–ª—ñ–≤
                </div>
                <div style="margin-top: 12px; padding-top: 12px; border-top: 1px solid rgba(255,255,255,0.2);">
                    <div style="font-size: 13px; font-weight: 500; margin-bottom: 8px;">üí° –©–æ –º–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏:</div>
                    <div style="font-size: 12px; opacity: 0.9; line-height: 1.6;">
                        ‚Ä¢ –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∫–æ–¥ –Ω–∞ –ø–æ–º–∏–ª–∫–∏ üîç<br>
                        ‚Ä¢ –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ç–∞ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è üéØ<br>
                        ‚Ä¢ –î–æ–¥–∞—Ç–∏ —Ç–µ—Å—Ç–∏ üß™<br>
                        ‚Ä¢ –ü–æ–∫—Ä–∞—â–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é üìö<br>
                        ‚Ä¢ –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –±–µ–∑–ø–µ–∫—É üõ°Ô∏è
                    </div>
                </div>
            </div>
        </div>
    `;
    
    messagesDiv.appendChild(messageDiv);
    messagesDiv.scrollTop = messagesDiv.scrollHeight;
}

// –í–∏–∑–Ω–∞—á–∏—Ç–∏ –º–æ–≤—É –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è –∑–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è–º
function getLanguageFromExtension(ext) {
    const languages = {
        'js': 'javascript',
        'jsx': 'javascript',
        'ts': 'typescript',
        'tsx': 'typescript',
        'py': 'python',
        'html': 'html',
        'css': 'css',
        'scss': 'css',
        'java': 'java',
        'cpp': 'cpp',
        'c': 'c',
        'go': 'go',
        'rs': 'rust',
        'php': 'php',
        'rb': 'ruby'
    };
    return languages[ext] || 'plaintext';
}

// üîß –®–≤–∏–¥–∫—ñ –¥—ñ—ó –¥–ª—è —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ–≥–æ –∫–æ–¥—É
async function analyzeImportedCode() {
    if (!currentRepo) {
        alert('‚ö†Ô∏è –°–ø–æ—á–∞—Ç–∫—É —ñ–º–ø–æ—Ä—Ç—É–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π!');
        return;
    }
    
    const action = prompt(
        'üîç –í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É:\n\n' +
        '1 - –ó–∞–≥–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ —è–∫–æ—Å—Ç—ñ –∫–æ–¥—É\n' +
        '2 - –ó–Ω–∞–π—Ç–∏ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω—ñ –±–∞–≥–∏\n' +
        '3 - –ê–Ω–∞–ª—ñ–∑ –±–µ–∑–ø–µ–∫–∏\n' +
        '4 - –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ\n' +
        '5 - –ê–Ω–∞–ª—ñ–∑ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∏\n' +
        '6 - Code review',
        '1'
    );
    
    const prompts = {
        '1': '–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π —è–∫—ñ—Å—Ç—å —Ü—å–æ–≥–æ –∫–æ–¥—É. –û—Ü—ñ–Ω–∏ —á–∏—Ç–∞–±–µ–ª—å–Ω—ñ—Å—Ç—å, –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ—Å—Ç—å, –¥–æ—Ç—Ä–∏–º–∞–Ω–Ω—è best practices. –î–∞–π –∑–∞–≥–∞–ª—å–Ω—É –æ—Ü—ñ–Ω–∫—É —Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó.',
        '2': '–ó–Ω–∞–π–¥–∏ –≤—Å—ñ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω—ñ –±–∞–≥–∏, –ø–æ–º–∏–ª–∫–∏ –ª–æ–≥—ñ–∫–∏, edge cases —è–∫—ñ –Ω–µ –æ–±—Ä–æ–±–ª—è—é—Ç—å—Å—è. –ü–æ—è—Å–Ω–∏ –∫–æ–∂–Ω—É –∑–Ω–∞–π–¥–µ–Ω—É –ø—Ä–æ–±–ª–µ–º—É.',
        '3': '–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –∫–æ–¥ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –≤—Ä–∞–∑–ª–∏–≤–æ—Å—Ç–µ–π –±–µ–∑–ø–µ–∫–∏: XSS, SQL injection, –Ω–µ–±–µ–∑–ø–µ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, –≤–∏—Ç–æ–∫–∏ –¥–∞–Ω–∏—Ö.',
        '4': '–ó–Ω–∞–π–¥–∏ bottlenecks —Ç–∞ –Ω–µ–æ–ø—Ç–∏–º–∞–ª—å–Ω—ñ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏ –∫–æ–¥—É. –ó–∞–ø—Ä–æ–ø–æ–Ω—É–π –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ.',
        '5': '–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç—É: —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª—ñ–≤, –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ, separation of concerns, SOLID –ø—Ä–∏–Ω—Ü–∏–ø–∏.',
        '6': '–ó—Ä–æ–±–∏ –¥–µ—Ç–∞–ª—å–Ω–∏–π code review —è–∫ –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏–π —Ä–æ–∑—Ä–æ–±–Ω–∏–∫. –í–∫–∞–∂–∏ –Ω–∞ –ø—Ä–æ–±–ª–µ–º–∏, –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è.'
    };
    
    const promptText = prompts[action] || prompts['1'];
    
    // –ü—ñ–¥–≥–æ—Ç—É–≤–∞—Ç–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∑ —Ñ–∞–π–ª–∞–º–∏
    let codeContext = `üìÅ –†–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π: ${currentRepo.owner}/${currentRepo.repo}\n\n`;
    
    Object.keys(window.codeFiles).forEach(filename => {
        const file = window.codeFiles[filename];
        codeContext += `\n--- ${filename} ---\n${file.code}\n`;
    });
    
    // –û–±–º–µ–∂–∏—Ç–∏ —Ä–æ–∑–º—ñ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
    if (codeContext.length > 15000) {
        codeContext = codeContext.substring(0, 15000) + '\n\n... (–∫–æ–¥ —Å–∫–æ—Ä–æ—á–µ–Ω–æ)';
    }
    
    const fullPrompt = `${promptText}\n\n${codeContext}`;
    
    // –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –≤ DeepSeek
    document.getElementById('deepseekInput').value = fullPrompt;
    await sendDeepseekMessage();
}

// üéØ –ü–æ–∫—Ä–∞—â–∏—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π —Ñ–∞–π–ª
async function enhanceFile() {
    if (Object.keys(window.codeFiles).length === 0) {
        alert('‚ö†Ô∏è –ù–µ–º–∞—î —Ñ–∞–π–ª—ñ–≤ –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è!');
        return;
    }
    
    const files = Object.keys(window.codeFiles);
    let fileList = 'üéØ –í–∏–±–µ—Ä—ñ—Ç—å —Ñ–∞–π–ª –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è:\n\n';
    files.forEach((file, i) => {
        fileList += `${i + 1}. ${file}\n`;
    });
    
    const choice = prompt(fileList, '1');
    if (!choice) return;
    
    const index = parseInt(choice) - 1;
    if (index < 0 || index >= files.length) {
        alert('‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä!');
        return;
    }
    
    const filename = files[index];
    const file = window.codeFiles[filename];
    
    const action = prompt(
        `üìù –©–æ –∑—Ä–æ–±–∏—Ç–∏ –∑ ${filename}?\n\n` +
        '1 - –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ (–ø–æ–∫—Ä–∞—â–∏—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É)\n' +
        '2 - –î–æ–¥–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ —Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é\n' +
        '3 - –û–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å\n' +
        '4 - –ú–æ–¥–µ—Ä–Ω—ñ–∑—É–≤–∞—Ç–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å (ES6+)\n' +
        '5 - –î–æ–¥–∞—Ç–∏ –æ–±—Ä–æ–±–∫—É –ø–æ–º–∏–ª–æ–∫\n' +
        '6 - –ü–æ–∫—Ä–∞—â–∏—Ç–∏ –±–µ–∑–ø–µ–∫—É',
        '1'
    );
    
    const prompts = {
        '1': `–ó—Ä–æ–±–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ü—å–æ–≥–æ —Ñ–∞–π–ª—É. –ü–æ–∫—Ä–∞—â —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –≤–∏–¥–∞–ª–∏ –¥—É–±–ª—é–≤–∞–Ω–Ω—è, –∑—Ä–æ–±–∏ –∫–æ–¥ –±—ñ–ª—å—à —á–∏—Ç–∞–±–µ–ª—å–Ω–∏–º:\n\n${file.code}`,
        '2': `–î–æ–¥–∞–π –¥–µ—Ç–∞–ª—å–Ω—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ —Ç–∞ JSDoc –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é –¥–æ —Ü—å–æ–≥–æ –∫–æ–¥—É:\n\n${file.code}`,
        '3': `–û–ø—Ç–∏–º—ñ–∑—É–π —Ü–µ–π –∫–æ–¥ –¥–ª—è –∫—Ä–∞—â–æ—ó –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ. –ó–Ω–∞–π–¥–∏ —Ç–∞ –≤–∏–ø—Ä–∞–≤ bottlenecks:\n\n${file.code}`,
        '4': `–ú–æ–¥–µ—Ä–Ω—ñ–∑—É–π —Ü–µ–π –∫–æ–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Å—É—á–∞—Å–Ω–∏–π ES6+ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å (—Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è, async/await):\n\n${file.code}`,
        '5': `–î–æ–¥–∞–π proper –æ–±—Ä–æ–±–∫—É –ø–æ–º–∏–ª–æ–∫, –≤–∞–ª—ñ–¥–∞—Ü—ñ—é –≤—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö —Ç–∞ try-catch –±–ª–æ–∫–∏:\n\n${file.code}`,
        '6': `–ü–æ–∫—Ä–∞—â –±–µ–∑–ø–µ–∫—É —Ü—å–æ–≥–æ –∫–æ–¥—É. –í–∏–ø—Ä–∞–≤ –≤—Ä–∞–∑–ª–∏–≤–æ—Å—Ç—ñ, –¥–æ–¥–∞–π —Å–∞–Ω—ñ—Ç–∏–∑–∞—Ü—ñ—é –¥–∞–Ω–∏—Ö:\n\n${file.code}`
    };
    
    const promptText = prompts[action] || prompts['1'];
    
    document.getElementById('deepseekInput').value = promptText;
    await sendDeepseekMessage();
}

// üìä –ü–æ—Ä—ñ–≤–Ω—è—Ç–∏ –∑ —ñ–Ω—à–∏–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—î–º
async function compareRepositories() {
    if (!currentRepo) {
        alert('‚ö†Ô∏è –°–ø–æ—á–∞—Ç–∫—É —ñ–º–ø–æ—Ä—Ç—É–π –ø–µ—Ä—à–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π!');
        return;
    }
    
    const repo2Url = prompt(
        'üìä –í–≤–µ–¥—ñ—Ç—å URL –¥—Ä—É–≥–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—è –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è:\n\n' +
        '(–ë—É–¥–µ –ø–æ—Ä—ñ–≤–Ω—è–Ω–æ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä—É, –ø—ñ–¥—Ö–æ–¥–∏, —è–∫—ñ—Å—Ç—å –∫–æ–¥—É)',
        ''
    );
    
    if (!repo2Url) return;
    
    alert('üöß –§—É–Ω–∫—Ü—ñ—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó–≤ —É —Ä–æ–∑—Ä–æ–±—Ü—ñ!\n\n–ù–∞—Ä–∞–∑—ñ —Ç–∏ –º–æ–∂–µ—à:\n1. –Ü–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –¥—Ä—É–≥–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π\n2. –ü–æ–ø—Ä–æ—Å–∏—Ç–∏ DeepSeek –ø–æ—Ä—ñ–≤–Ω—è—Ç–∏ —ó—Ö');
}

// üíæ –ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –ø–æ–∫—Ä–∞—â–µ–Ω–∏–π –∫–æ–¥ –Ω–∞–∑–∞–¥
async function exportToGitHub() {
    if (Object.keys(window.codeFiles).length === 0) {
        alert('‚ö†Ô∏è –ù–µ–º–∞—î –∫–æ–¥—É –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É!');
        return;
    }
    
    const action = confirm(
        'üíæ –ï–∫—Å–ø–æ—Ä—Ç –ø–æ–∫—Ä–∞—â–µ–Ω–æ–≥–æ –∫–æ–¥—É\n\n' +
        '–û–ö - –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ ZIP\n' +
        '–°–∫–∞—Å—É–≤–∞—Ç–∏ - –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –¥–ª—è GitHub'
    );
    
    if (action) {
        // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ ZIP
        await downloadAllAsZip();
    } else {
        // –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
        const instructions = `
üêô –Ø–∫ –æ–Ω–æ–≤–∏—Ç–∏ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π:

1Ô∏è‚É£ –ó–∞–≤–∞–Ω—Ç–∞–∂ –ø–æ–∫—Ä–∞—â–µ–Ω—ñ —Ñ–∞–π–ª–∏ (–∫–Ω–æ–ø–∫–∞ üì¶ ZIP)

2Ô∏è‚É£ –†–æ–∑–ø–∞–∫—É–π –∞—Ä—Ö—ñ–≤ –ª–æ–∫–∞–ª—å–Ω–æ

3Ô∏è‚É£ –£ —Ç–µ—Ä–º—ñ–Ω–∞–ª—ñ –≤–∏–∫–æ–Ω–∞–π:
   cd path/to/your/repo
   git add .
   git commit -m "ü§ñ AI-enhanced code improvements"
   git push origin main

4Ô∏è‚É£ –ê–±–æ —Å—Ç–≤–æ—Ä–∏ Pull Request:
   git checkout -b ai-improvements
   git push origin ai-improvements
   # –ü–æ—Ç—ñ–º —Å—Ç–≤–æ—Ä–∏ PR –Ω–∞ GitHub

üí° –ü–æ—Ä–∞–¥–∞: –ü–µ—Ä–µ–≤—ñ—Ä –∑–º—ñ–Ω–∏ –ø–µ—Ä–µ–¥ –∫–æ–º—ñ—Ç–æ–º!
        `;
        
        alert(instructions);
    }
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂—É–≤–∞–ª—å–Ω–∏–π overlay
function showLoadingOverlay(message) {
    let overlay = document.getElementById('github-loading-overlay');
    
    if (!overlay) {
        overlay = document.createElement('div');
        overlay.id = 'github-loading-overlay';
        overlay.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.9);
            backdrop-filter: blur(10px);
            z-index: 9999;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            color: white;
        `;
        
        overlay.innerHTML = `
            <div style="font-size: 64px; margin-bottom: 20px;">üêô</div>
            <div style="font-size: 24px; font-weight: 600; margin-bottom: 10px;" id="loading-title">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>
            <div style="font-size: 14px; color: rgba(255,255,255,0.7);" id="loading-subtitle"></div>
            <div style="margin-top: 30px;">
                <div class="loading-dots">
                    <div class="loading-dot"></div>
                    <div class="loading-dot"></div>
                    <div class="loading-dot"></div>
                </div>
            </div>
        `;
        
        document.body.appendChild(overlay);
    }
    
    document.getElementById('loading-title').textContent = message;
    overlay.style.display = 'flex';
}

function updateLoadingOverlay(message) {
    const subtitle = document.getElementById('loading-subtitle');
    if (subtitle) {
        subtitle.textContent = message;
    }
}

function hideLoadingOverlay() {
    const overlay = document.getElementById('github-loading-overlay');
    if (overlay) {
        overlay.style.display = 'none';
    }
}

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è GitHub —Ç–æ–∫–µ–Ω—É (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
function setupGitHubToken() {
    const currentToken = githubToken || localStorage.getItem('github_token') || '';
    
    const token = prompt(
        'üîë GitHub Personal Access Token (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)\n\n' +
        '–î–æ–∑–≤–æ–ª—è—î:\n' +
        '‚Ä¢ –î–æ—Å—Ç—É–ø –¥–æ –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó–≤\n' +
        '‚Ä¢ –ë—ñ–ª—å—à–µ API –∑–∞–ø–∏—Ç—ñ–≤\n\n' +
        '–û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–æ–∫–µ–Ω: Settings ‚Üí Developer settings ‚Üí Personal access tokens\n\n' +
        '–ó–∞–ª–∏—à –ø–æ—Ä–æ–∂–Ω—ñ–º –¥–ª—è –ø—É–±–ª—ñ—á–Ω–∏—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó–≤',
        currentToken
    );
    
    if (token !== null) {
        githubToken = token;
        if (token) {
            localStorage.setItem('github_token', token);
            alert('‚úÖ GitHub —Ç–æ–∫–µ–Ω –∑–±–µ—Ä–µ–∂–µ–Ω–æ!');
        } else {
            localStorage.removeItem('github_token');
            alert('‚ÑπÔ∏è –¢–æ–∫–µ–Ω –≤–∏–¥–∞–ª–µ–Ω–æ. –î–æ—Å—Ç—É–ø–Ω—ñ —Ç—ñ–ª—å–∫–∏ –ø—É–±–ª—ñ—á–Ω—ñ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó.');
        }
    }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è GitHub Import UI
function initializeGitHubImport() {
    const codeHeader = document.querySelector('.code-header');
    if (!codeHeader) return;
    
    // –í–∏–¥–∞–ª–∏—Ç–∏ —è–∫—â–æ –≤–∂–µ —ñ—Å–Ω—É—î
    const existing = document.getElementById('github-import-buttons');
    if (existing) existing.remove();
    
    const githubDiv = document.createElement('div');
    githubDiv.id = 'github-import-buttons';
    githubDiv.style.cssText = `
        display: flex;
        gap: 8px;
        margin-top: 10px;
        flex-wrap: wrap;
    `;
    
    const buttonStyle = `
        background: rgba(46, 160, 67, 0.2);
        color: white;
        border: 1px solid #2ea043;
        padding: 8px 14px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 13px;
        font-weight: 500;
        transition: all 0.2s ease;
    `;
    
    githubDiv.innerHTML = `
        <button onclick="importFromGitHub()" title="–Ü–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –∑ GitHub" style="${buttonStyle}">
            üêô –Ü–º–ø–æ—Ä—Ç –∑ GitHub
        </button>
        <button onclick="analyzeImportedCode()" title="–ê–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∫–æ–¥" style="${buttonStyle}">
            üîç –ê–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏
        </button>
        <button onclick="enhanceFile()" title="–ü–æ–∫—Ä–∞—â–∏—Ç–∏ —Ñ–∞–π–ª" style="${buttonStyle}">
            ‚ú® –ü–æ–∫—Ä–∞—â–∏—Ç–∏
        </button>
        <button onclick="exportToGitHub()" title="–ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –Ω–∞–∑–∞–¥" style="${buttonStyle}">
            üì§ –ï–∫—Å–ø–æ—Ä—Ç
        </button>
        <button onclick="setupGitHubToken()" title="–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ GitHub —Ç–æ–∫–µ–Ω" style="${buttonStyle}">
            üîë –¢–æ–∫–µ–Ω
        </button>
    `;
    
    // –î–æ–¥–∞—Ç–∏ hover –µ—Ñ–µ–∫—Ç
    githubDiv.querySelectorAll('button').forEach(btn => {
        btn.addEventListener('mouseover', function() {
            this.style.background = 'rgba(46, 160, 67, 0.3)';
            this.style.transform = 'translateY(-1px)';
        });
        btn.addEventListener('mouseout', function() {
            this.style.background = 'rgba(46, 160, 67, 0.2)';
            this.style.transform = 'translateY(0)';
        });
    });
    
    codeHeader.appendChild(githubDiv);
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ç–æ–∫–µ–Ω —è–∫—â–æ —î
    const savedToken = localStorage.getItem('github_token');
    if (savedToken) {
        githubToken = savedToken;
    }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeGitHubImport);
} else {
    initializeGitHubImport();
}
